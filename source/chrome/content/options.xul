<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://ankpixiv/content/options.css"?>

<!DOCTYPE prefwindow SYSTEM "chrome://ankpixiv/locale/prefwindow.dtd">

<dialog id="ankpixivPreferences"
            title="&prefwindow.title;"
            persist="lastSelected screenX screenY"
            buttons="accept,cancel"
            style="width:52em;"
            xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
            onload="return onLoad()"
            ondialogaccept="return onSave()"
            xmlns:html="http://www.w3.org/1999/xhtml">

  <script type="application/x-javascript" src="chrome://ankpixiv/content/ankutils.js" />
  <script type="application/x-javascript" src="chrome://ankpixiv/content/ankstorage.js" />
  <script type="application/x-javascript" src="chrome://ankpixiv/content/ankpixiv.js" />

  <script type="application/x-javascript"><![CDATA[
      let currentFilenameElement = document.getElementById('default-filename');

      function settings () {
        return [
          [
            'initial-directory',
            'initialDirectory',
            'string'
          ],
          [
            'show-save-dialog',
            'showSaveDialog',
            'boolean',
            'checked'
          ],
          [
            'save-history',
            'saveHistory',
            'boolean',
            'checked'
          ],
          [
            'download-when-rate',
            'downloadWhenRate',
            'boolean',
            'checked'
          ],
          [
            'download-rate',
            'downloadRate',
            'number'
          ],
          [
            'default-filename',
            'defaultFilename',
            'string'
          ],
          [
            'alternate-filename',
            'alternateFilename',
            'string'
          ],
          [
            'large-on-middle',
            'largeOnMiddle',
            'boolean',
            'checked'
          ],
          [
            'open-comment',
            'openComment',
            'boolean',
            'checked'
          ],
          [
            'confirm-existing',
            'confirmExistingDownload',
            'boolean',
            'checked'
          ],
          [
            'confirm-existing-when-auto',
            'confirmExistingDownloadWhenAuto',
            'boolean',
            'checked'
          ],
          [
            'download-when-middle',
            'downloadWhenClickMiddle',
            'boolean',
            'checked'
          ],
        ];
      }
      function selectDir () {
        var filePicker = Components.classes['@mozilla.org/filepicker;1']
                           .createInstance(Components.interfaces.nsIFilePicker);
        filePicker.init(window, "Choose a folder.", filePicker.modeGetFolder);
        if (filePicker.show() == filePicker.returnOK) {
          document.getElementById('initial-directory').value = filePicker.file.path;
        }
      }
      function pushToken (elem) {
        let token = elem.selectedItem.label
        let box = currentFilenameElement;
        let now = box.value;
        let [ap, bp] = [box.selectionStart, box.selectionEnd];
        let [as, bs] = [now.slice(0, ap), now.slice(bp, now.length)];
        box.value = as + token + bs;
        let (p = ap + token.length)
          box.setSelectionRange(p, p);
      }
      function onLoad () {
        settings().forEach(function ([id, name, type, prop]) {
          if (!prop)
            prop = 'value';
          let elem = document.getElementById(id);
          elem[prop] = AnkPixiv.Prefs.get(name, elem[prop]);
        });
        document.getElementById('confirm-existing-when-auto').disabled =
          !AnkPixiv.Prefs.get('confirmExistingDownload');
        return true;
      }
      function onSave (event) {
        // check for nonexistent path
        try {
          let path = document.getElementById('initial-directory').value;
          let initdir = AnkUtils.ccci("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
          initdir.initWithPath(path);
          if (!initdir.exists())
            throw 'Initial directory does not exist';
        } catch (e) {
          if (!confirm(AnkPixiv.Locale('notifyNonexistentDirectory')))
            return false;
        }
        // save
        settings().forEach(function ([id, name, type, prop]) {
          if (!prop)
            prop = 'value';
          let elem = document.getElementById(id);
          AnkPixiv.Prefs.set(name, elem[prop], type);
        });
        return true;
      }

      function onConfirmExistingDownloadClick (event) {
        document.getElementById('confirm-existing-when-auto').disabled = event.target.checked;
      }
  ]]></script>

    <groupbox>
      <checkbox id="show-save-dialog" label="&showSaveDialog.label;"/>

      <hbox align="center">
        <checkbox id="download-when-rate" />
        <menulist id="download-rate">
          <menupopup>
            <menuitem label="6" value="6"/>
            <menuitem label="7" value="7"/>
            <menuitem label="8" value="8"/>
            <menuitem label="9" value="9"/>
            <menuitem label="10" value="10"/>
          </menupopup>
        </menulist>
        <label value="&downloadRate.label;"/>
      </hbox>

      <hbox align="center">
        <label accesskey="I" control="textstringpref">
          &initialDirectory.label;
        </label>
        <textbox id="initial-directory" flex="1" />
        <toolbarbutton id="initial-directory-browse" oncommand="selectDir();"
                       instantApply="true" label="&browse;" />
      </hbox>

      <checkbox id="save-history" label="&saveHistory.label;" />
      <checkbox id="large-on-middle" label="&largeOnMiddle;" />
      <checkbox id="open-comment" label="&openComment;" />
      <checkbox id="confirm-existing" label="&confirmExistingDownload;"
                onclick="onConfirmExistingDownloadClick(event)"/>
      <checkbox id="confirm-existing-when-auto" label="&confirmExistingDownloadWhenAuto;" />
      <checkbox id="download-when-middle" label="&downloadWhenClickMiddle;" />
    </groupbox>

    <groupbox orient="vertical">
      <vbox>
        <caption label="&defaultFilename;" />
        <textbox id="default-filename" onfocus="currentFilenameElement=event.target" />
        <caption label="&alternateFilename;" />
        <textbox id="alternate-filename" onfocus="currentFilenameElement=event.target" />
      </vbox>
      <groupbox>
        <hbox>
          <listbox id="token-listbox1" rows="7" class="token-listbox" onclick="pushToken(this)">
            <listitem label="?title?"></listitem>
            <listitem label="?member-id?"></listitem>
            <listitem label="?member-name?"></listitem>
            <listitem label="?tags?"></listitem>
            <listitem label="?short-tags?"></listitem>
            <listitem label="?tools?"></listitem>
            <listitem label="?pixiv-id?"></listitem>
          </listbox>
          <listbox id="token-listbox2" rows="7" class="token-listbox" onclick="pushToken(this)">
            <listitem label="?illust-id?"></listitem>
            <listitem label="?illust-year?"></listitem>
            <listitem label="?illust-month?"></listitem>
            <listitem label="?illust-day?"></listitem>
            <listitem label="?illust-hour?"></listitem>
            <listitem label="?illust-minute?"></listitem>
          </listbox>
          <listbox id="token-listbox3" rows="7" class="token-listbox" onclick="pushToken(this)">
            <listitem label="?saved-year?"></listitem>
            <listitem label="?saved-month?"></listitem>
            <listitem label="?saved-day?"></listitem>
            <listitem label="?saved-hour?"></listitem>
            <listitem label="?saved-minute?"></listitem>
          </listbox>
         </hbox>
      </groupbox>
    </groupbox>

</dialog>
